// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoCommunity.Repository.myDbContent;

namespace PhotoCommunity.Repository.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20181223050622_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PhotoCommunity.Repository.Entity.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArticleContext")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("ArticleTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("ClassId");

                    b.Property<int>("CommmentCount");

                    b.Property<bool>("IsDelete");

                    b.Property<long>("TagId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("article");
                });

            modelBuilder.Entity("PhotoCommunity.Repository.Entity.Class", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClassName");

                    b.HasKey("Id");

                    b.ToTable("class");
                });

            modelBuilder.Entity("PhotoCommunity.Repository.Entity.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ArticleId");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("commment");
                });

            modelBuilder.Entity("PhotoCommunity.Repository.Entity.Photo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ArticleId");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("photo");
                });

            modelBuilder.Entity("PhotoCommunity.Repository.Entity.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("PhotoCommunity.Repository.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
